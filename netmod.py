from netclass import DisjointSet, Node, Link, Traffic


def NSFNET():
    node_1 = Node('1', ['2', '3', '8'])
    node_2 = Node('2', ['1', '3', '4'])
    node_3 = Node('3', ['1', '2', '6'])
    node_4 = Node('4', ['2', '5', '9'])
    node_5 = Node('5', ['4', '6', '7'])
    node_6 = Node('6', ['3', '5', '13', '14'])
    node_7 = Node('7', ['5', '8', '14'])
    node_8 = Node('8', ['1', '7', '11'])
    node_9 = Node('9', ['4', '10', '12'])
    node_10 = Node('10', ['9', '11', '13'])
    node_11 = Node('11', ['8', '10', '12', '14'])
    node_12 = Node('12', ['9', '11', '13'])
    node_13 = Node('13', ['6', '10', '12'])
    node_14 = Node('14', ['6', '7', '11'])
    all_node = [node_1, node_2, node_3, node_4, node_5, node_6, node_7, \
                node_8, node_9, node_10, node_11, node_12, node_13, node_14]

    slot_length = 320
    link1_2 = Link('1-2', [node_1, node_2], 1050, [1] * slot_length)
    link1_3 = Link('1-3', [node_1, node_3], 1500, [1] * slot_length)
    link1_8 = Link('1-8', [node_1, node_8], 2400, [1] * slot_length)
    link2_3 = Link('2-3', [node_2, node_3], 600, [1] * slot_length)
    link2_4 = Link('2-4', [node_2, node_4], 750, [1] * slot_length)
    link3_6 = Link('3-6', [node_3, node_6], 1800, [1] * slot_length)
    link4_5 = Link('4-5', [node_4, node_5], 600, [1] * slot_length)
    link4_9 = Link('4-9', [node_4, node_9], 1950, [1] * slot_length)
    link5_6 = Link('5-6', [node_5, node_6], 2400, [1] * slot_length)
    link5_7 = Link('5-7', [node_5, node_7], 600, [1] * slot_length)
    link6_13 = Link('6-13', [node_6, node_13], 1800, [1] * slot_length)
    link6_14 = Link('6-14', [node_6, node_14], 1050, [1] * slot_length)
    link7_8 = Link('7-8', [node_7, node_8], 750, [1] * slot_length)
    link7_14 = Link('7-14', [node_7, node_14], 1350, [1] * slot_length)
    link8_11 = Link('8-11', [node_8, node_11], 750, [1] * slot_length)
    link9_10 = Link('9-10', [node_9, node_10], 600, [1] * slot_length)
    link9_12 = Link('9-12', [node_9, node_12], 750, [1] * slot_length)
    link10_11 = Link('10-11', [node_10, node_11], 300, [1] * slot_length)
    link10_13 = Link('10-13', [node_10, node_13], 300, [1] * slot_length)
    link11_12 = Link('11-12', [node_11, node_12], 300, [1] * slot_length)
    link11_14 = Link('11-14', [node_11, node_14], 750, [1] * slot_length)
    link12_13 = Link('12-13', [node_12, node_13], 150, [1] * slot_length)
    all_link = [link1_2, link1_3, link1_8, link2_3, link2_4, link3_6, link4_5, link4_9, \
                link5_6, link5_7, link6_13, link6_14, link7_8, link7_14, link8_11, \
                link9_10, link9_12, link10_11, link10_13, link11_12, link11_14, link12_13]

def USbackbone():
    node_1 = Node('1', ['2', '6'])
    node_2 = Node('2', ['1', '3', '6'])
    node_3 = Node('3', ['2', '4', '5', '7'])
    node_4 = Node('4', ['3', '5', '7'])
    node_5 = Node('5', ['3', '4', '8'])
    node_6 = Node('6', ['1', '2', '7', '9', '11'])
    node_7 = Node('7', ['3', '4', '6', '8', '9'])
    node_8 = Node('8', ['5', '7', '10'])
    node_9 = Node('9', ['6', '7', '10', '11', '12'])
    node_10 = Node('10', ['8', '9', '13', '14'])
    node_11 = Node('11', ['6', '9', '12', '15', '19'])
    node_12 = Node('12', ['9', '11', '13', '16'])
    node_13 = Node('13', ['10', '12', '14', '17'])
    node_14 = Node('14', ['10', '13', '18'])
    node_15 = Node('15', ['11', '16', '20'])
    node_16 = Node('16', ['12', '15', '17', '21', '22'])
    node_17 = Node('17', ['13', '16', '18', '22', '23'])
    node_18 = Node('18', ['14', '17', '24'])
    node_19 = Node('19', ['11', '20'])
    node_20 = Node('20', ['15', '19', '21'])
    node_21 = Node('21', ['16', '20', '22'])
    node_22 = Node('22', ['16', '17', '21', '23'])
    node_23 = Node('23', ['17', '22', '24'])
    node_24 = Node('24', ['18', '23'])
    all_node = [node_1, node_2, node_3, node_4, node_5, node_6, node_7, node_8, node_9, \
                node_10, node_11, node_12, node_13, node_14, node_15, node_16, node_17, node_18, node_19, \
                node_20, node_21, node_22, node_23, node_24]

    slot_length = 320
    link1_2 = Link('1-2', [node_1, node_2], 800, [1] * slot_length)
    link1_6 = Link('1-6', [node_1, node_6], 1000, [1] * slot_length)
    link2_3 = Link('2-3', [node_2, node_3], 1100, [1] * slot_length)
    link2_6 = Link('2-6', [node_2, node_6], 950, [1] * slot_length)
    link3_4 = Link('3-4', [node_3, node_4], 250, [1] * slot_length)
    link3_5 = Link('3-5', [node_3, node_5], 1100, [1] * slot_length)
    link3_7 = Link('3-7', [node_3, node_7], 1000, [1] * slot_length)
    link4_5 = Link('4-5', [node_4, node_5], 800, [1] * slot_length)
    link4_7 = Link('4-7', [node_4, node_7], 850, [1] * slot_length)
    link5_8 = Link('5-8', [node_5, node_8], 1200, [1] * slot_length)
    link6_7 = Link('6-7', [node_6, node_7], 1100, [1] * slot_length)
    link6_9 = Link('6-9', [node_6, node_9], 1200, [1] * slot_length)
    link6_11 = Link('6-11', [node_6, node_11], 1900, [1] * slot_length)
    link7_8 = Link('7-8', [node_7, node_8], 1150, [1] * slot_length)
    link7_9 = Link('7-9', [node_7, node_9], 1000, [1] * slot_length)
    link8_10 = Link('8-10', [node_8, node_10], 900, [1] * slot_length)
    link9_10 = Link('9-10', [node_9, node_10], 1000, [1] * slot_length)
    link9_11 = Link('9-11', [node_9, node_11], 1400, [1] * slot_length)
    link9_12 = Link('9-12', [node_9, node_12], 1000, [1] * slot_length)
    link10_13 = Link('10-13', [node_10, node_13], 950, [1] * slot_length)
    link10_14 = Link('10-14', [node_10, node_14], 850, [1] * slot_length)
    link11_12 = Link('11-12', [node_11, node_12], 900, [1] * slot_length)
    link11_15 = Link('11-15', [node_11, node_15], 1300, [1] * slot_length)
    link11_19 = Link('11-19', [node_11, node_19], 2600, [1] * slot_length)
    link12_13 = Link('12-13', [node_12, node_13], 900, [1] * slot_length)
    link12_16 = Link('12-16', [node_12, node_16], 1000, [1] * slot_length)
    link13_14 = Link('13-14', [node_13, node_14], 650, [1] * slot_length)
    link13_17 = Link('13-17', [node_13, node_17], 1100, [1] * slot_length)
    link14_18 = Link('14-18', [node_14, node_18], 1200, [1] * slot_length)
    link15_16 = Link('15-16', [node_15, node_16], 600, [1] * slot_length)
    link15_20 = Link('15-20', [node_15, node_20], 1300, [1] * slot_length)
    link16_17 = Link('16-17', [node_16, node_17], 1000, [1] * slot_length)
    link16_21 = Link('16-21', [node_16, node_21], 1000, [1] * slot_length)
    link16_22 = Link('16-22', [node_16, node_22], 800, [1] * slot_length)
    link17_18 = Link('17-18', [node_17, node_18], 800, [1] * slot_length)
    link17_22 = Link('17-22', [node_17, node_22], 850, [1] * slot_length)
    link17_23 = Link('17-23', [node_17, node_23], 950, [1] * slot_length)
    link18_24 = Link('18-24', [node_18, node_24], 900, [1] * slot_length)
    link19_20 = Link('19-20', [node_19, node_20], 950, [1] * slot_length)
    link20_21 = Link('20-21', [node_20, node_21], 700, [1] * slot_length)
    link21_22 = Link('21-22', [node_21, node_22], 300, [1] * slot_length)
    link22_23 = Link('22-23', [node_22, node_23], 600, [1] * slot_length)
    link23_24 = Link('23-24', [node_23, node_24], 900, [1] * slot_length)
    all_link = [link1_2, link1_6, link2_3, link2_6, link3_5, link3_4, link3_7, link4_5, link4_7, link5_8, \
                link6_7, link6_9, link6_11, link7_8, link7_9, link8_10, link9_10, link9_11, link9_12, link10_14, link10_13, link11_12, \
                link11_15, link11_19, link12_13, link12_16, link13_14, link13_17, link14_18, link15_16, link15_20, \
                link16_17, link16_21, link16_22, link17_18, link17_22, link17_23, link18_24, link19_20, \
                link20_21, link21_22, link22_23, link23_24]
